//------------------------------------------------------------------------------ 
// <auto-generated> 
// This code was automatically generated.
// 
// Changes to this file may cause incorrect behavior and will be lost if 
// the code is regenerated. 
// </auto-generated> 
//------------------------------------------------------------------------------
namespace FoxKit.Modules.DataSet.Fox.TppSound
{
    using System;
    using System.Collections.Generic;
    using FoxKit.Modules.DataSet.Fox.FoxCore;
    using FoxKit.Modules.Lua;
    using FoxLib;
    using static KopiLua.Lua;
    using OdinSerializer;
    using UnityEngine;
    using DataSetFile2 = DataSetFile2;
    using TppGameKit = FoxKit.Modules.DataSet.Fox.TppGameKit;
    using FoxCore;
    
    [SerializableAttribute, ExposeClassToLuaAttribute]
    public partial class TppSoundDaemon : Entity
    {
        [OdinSerializeAttribute, NonSerializedAttribute, PropertyInfoAttribute(Core.PropertyInfoType.Bool, 240, 1, Core.ContainerType.StaticArray, PropertyExport.EditorAndGame, PropertyExport.EditorAndGame, null, null)]
        private System.Boolean keepNoticeEnable;
        
        public override short ClassId => 0;
        
        public override ushort Version => 0;
        
        public override string Category => "Sound";
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void GetInstance(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void Reset(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void SetMute(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void SetMuteInstant(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void ResetMute(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void CheckCurrentMuteIs(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void CheckCurrentMuteMoreThan(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void CheckHighestMuteIs(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void CheckHighestMuteMoreThan(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void SetCutSceneMute(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void ResetCutSceneMute(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void PostEvent(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void PostEventAndGetHandle(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void IsEventPlaying(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void PostEvent3D(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void PostSituationSwitchEvent(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void IsAssetLoading(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void LoadRegidentStreamData(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Static)]
        static partial void UnloadRegidentStreamData(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void RegisterSourceEvent(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void UnregisterSourceEvent(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void KeepPhase(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void KeepAlertRank(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void KeepNotice(lua_State lua);
        
        [ExposeMethodToLua(MethodStaticity.Instance)]
        partial void IsKeepMode(lua_State lua);
    }
}
